version: '3'
services:
  auth_db:
    image: auth_db_image
    restart: always
    container_name: auth_db
    build: ./services/auth_db
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: auth_service
  auth:
    image: auth_image
    restart: always
    container_name: auth
    ports:
      - '8081:80'
    depends_on:
      - auth_db
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    command: ["./wait-for-it.sh"]
    environment:
      JWT_SECRET: 'secret'
  proxy_manager:
    image: proxy_manager_image
    restart: always
    container_name: proxy_manager
    ports: 
      - '8080:8080'
    build:
      context: ./services/proxy_manager
      dockerfile: Dockerfile
  conference_db:
    image: conference_db_image
    restart: always
    container_name: conference_db
    build: ./services/conference_db
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: conference_service
  conference:
    image: conference_image
    container_name: conference
    ports:
      - '8082:80'
    depends_on:
      - conference_db
    build:
      context: ./services/conference
      dockerfile: Dockerfile
    command: ["./wait-for-it.sh"]
  badges_db:
    image: badges_db_image
    restart: always
    container_name: badges_db
    build: ./services/badges_db
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: badges_service
  badges:
    image: badges_image
    container_name: badges
    ports:
      - '8083:80'
    depends_on:
      - badges_db
    build:
      context: ./services/badges
    command: ["./wait-for-it.sh"]
    environment:
      PORT: 80
  frontend:
    image: frontend_image
    container_name: frontend
    ports:
      - '8084:80'
    build:
      context: ./services/frontend
    environment:
      PORT: 80
      REACT_APP_API_URL: 'http://localhost:8080/api'
